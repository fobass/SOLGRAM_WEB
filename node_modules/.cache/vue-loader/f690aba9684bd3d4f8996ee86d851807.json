{"remainingRequest":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ernistisabekov/Desktop/SOLGRAM/src/components/quote/DataTable.vue?vue&type=style&index=0&id=9920801e&lang=css","dependencies":[{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/src/components/quote/DataTable.vue","mtime":1644934934824},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hZy1yb290LXdyYXBwZXIgewogICAgYm9yZGVyOiBzb2xpZCAwcHg7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBib3JkZXItY29sb3I6IHZhcigtLWFnLWJvcmRlci1jb2xvciwgIzMwMzYzZCkgIWltcG9ydGFudDsKfQouZ3JpZC1jZWxsLWNlbnRlcmVkIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCg=="},{"version":3,"sources":["/Users/ernistisabekov/Desktop/SOLGRAM/src/components/quote/DataTable.vue"],"names":[],"mappings":";AA8GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB","file":"/Users/ernistisabekov/Desktop/SOLGRAM/src/components/quote/DataTable.vue","sourceRoot":"","sourcesContent":["<template>\n      <ag-grid-vue\n        style=\"width: 100%; height: 100%\"\n        class=\"ag-theme-balham-dark\"\n        :defaultColDef=\"defaultColDef\"\n        :columnDefs=\"columnDefs\"\n        :rowData=\"props.rowData\"\n        \n        :rowDragManaged=\"true\"\n        :animateRows=\"true\"\n        @grid-ready=\"onGridReady\"\n      >\n      </ag-grid-vue>\n</template>\n<!-- :getRowHeight=\"getRowHeight\" -->\n\n<script setup lang=\"ts\">\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham-dark.css\";\nimport { AgGridVue } from \"ag-grid-vue3\"\nimport { ref, defineProps }  from 'vue'\n\n    const props = defineProps({\n        rowData: {\n            type: Array\n        }\n    })\n\n    const columnDefs = ref([\n        { headerName: \" \", field: \"\", resizable: false, rowDrag: true, minWidth: 40, maxWidth: 40 },\n        { \n            headerName: \"Symbol\", \n            field: \"symbol\", \n            cellStyle: { textAlign: 'left' },\n            cellRenderer: params => params.value.toUpperCase(),\n            maxWidth: 130\n        },\n        { \n            headerName: \"Name\", \n            field: \"name\", \n            type: 'leftAligned', \n            cellStyle: { textAlign: 'left' },\n            cellRenderer: params => params.value.toUpperCase()\n        },\n        // { headerName: \"Image\", field: \"image\" },\n        { \n            headerName: \"Price\", \n            field: \"current_price\", \n            type: 'rightAligned', \n            valueFormatter: currencyFormatter \n        },\n        { \n            headerName: \"Market Cap\", \n            field: \"market_cap\", \n            type: 'rightAligned',\n            valueFormatter: formatter\n        },\n\n        { \n            headerName: \"Volume\", \n            field: \"total_volume\", \n            type: 'rightAligned',\n            valueFormatter: formatter\n        },\n        { headerName: \"High 24h\", field: \"high_24h\", type: 'rightAligned' },\n        { headerName: \"Low 24h\", field: \"low_24h\", type: 'rightAligned' },\n        { headerName: \"Change\", field: \"price_change_24h\", type: 'rightAligned' },\n        { headerName: \"Change%\", field: \"price_change_percentage_24h\", type: 'rightAligned' },\n        \n    ])\n\n    const defaultColDef = ref({\n        sortable: true,\n        resizable: true,\n        filter: false,\n        leftAligned: {\n            headerClass: 'ag-left-aligned-header',\n            cellClass: 'ag-left-aligned-cell'\n        }\n    })\n\n    // const getRowHeight = () => {\n    //     return 32\n    // }\n\n    function formatter(params: any) {\n        let formatter = Intl.NumberFormat('en', { notation: 'compact', compactDisplay: \"short\" })\n        return formatter.format(params.value)\n    }\n\n    function currencyFormatter(params: any) {\n        return '$' + formatNumber(params.value);\n    }\n\n    function formatNumber(number: number) {\n        const val = Math.floor(number)\n            .toString()\n            .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n\n        return val\n    }\n    const gridApi = ref()\n    const onGridReady = (params) => {\n        gridApi.value = params.api\n        gridApi.value.sizeColumnsToFit();\n    }\n    \n</script>\n\n<style>\n.ag-root-wrapper {\n    border: solid 0px;\n    border-radius: 2px;\n    border-color: var(--ag-border-color, #30363d) !important;\n}\n.grid-cell-centered {\n  text-align: center;\n}\n\n</style>"]}]}