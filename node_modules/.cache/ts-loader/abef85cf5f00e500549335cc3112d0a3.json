{"remainingRequest":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/babel-loader/lib/index.js!/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/ts-loader/index.js??ref--15-2!/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/eslint-loader/index.js??ref--14-0!/Users/ernistisabekov/Desktop/SOLGRAM/src/service/DataService.ts","dependencies":[{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/src/service/DataService.ts","mtime":1644928238283},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/babel.config.js","mtime":1644498880512},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZXJuaXN0aXNhYmVrb3YvRGVza3RvcC9TT0xHUkFNL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2VybmlzdGlzYWJla292L0Rlc2t0b3AvU09MR1JBTS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgaHR0cCBmcm9tICdAL2h0dHAtY29tbW9uJzsKCnZhciBEYXRhU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gRGF0YVNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRGF0YVNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKERhdGFTZXJ2aWNlLCBbewogICAga2V5OiAibWFya2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBtYXJrZXQoKSB7CiAgICAgIGRlYnVnZ2VyOwogICAgICByZXR1cm4gaHR0cC5nZXQoJy9tYXJrZXRzP3ZzX2N1cnJlbmN5PXVzZCcpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIERhdGFTZXJ2aWNlOwp9KCk7CgpleHBvcnQgZGVmYXVsdCBuZXcgRGF0YVNlcnZpY2UoKTs="},{"version":3,"sources":["/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/eslint-loader/index.js??ref--14-0!/Users/ernistisabekov/Desktop/SOLGRAM/src/service/DataService.ts"],"names":[],"mappings":";;AAAA,OAAO,IAAP,MAAiB,eAAjB;;IAGM,W;;;;;;;WACF,kBAAM;AACF;AACA,aAAO,IAAI,CAAC,GAAL,CAAS,0BAAT,CAAP;AACH;;;;;;AAGL,eAAe,IAAI,WAAJ,EAAf","sourcesContent":["import http from '@/http-common'\nimport { Stock } from '@/models/stock.interface'\n\nclass DataService {\n    market(): Promise<Stock> {\n        debugger\n        return http.get('/markets?vs_currency=usd')\n    }\n}\n\nexport default new DataService()"],"sourceRoot":""}]}