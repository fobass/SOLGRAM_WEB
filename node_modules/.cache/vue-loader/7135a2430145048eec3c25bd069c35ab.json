{"remainingRequest":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ernistisabekov/Desktop/SOLGRAM/src/components/quote/MiniGraph.vue?vue&type=template&id=adcd7938&ts=true","dependencies":[{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/src/components/quote/MiniGraph.vue","mtime":1645027953536},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ernistisabekov/Desktop/SOLGRAM/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiA8ZGl2IGNsYXNzPSJiaXRjb2luLXByaWNlIj4KICAgIDxzdmcgc3R5bGU9IndpZHRoOjA7IGhlaWdodDowOyBwb3NpdGlvbjphYnNvbHV0ZTsiIGFyaWEtaGlkZGVuPSJ0cnVlIiBmb2N1c2FibGU9ImZhbHNlIj4KICAgICAgPGRlZnM+CiAgICAgICAgPGxpbmVhckdyYWRpZW50IGlkPSJidGNGaWxsIiB4MT0iMSIgeDI9IjEiIHkxPSIwIiB5Mj0iMSI+CiAgICAgICAgICA8c3RvcCBvZmZzZXQ9IjAlIiBzdG9wLWNvbG9yPSIjZjY5MTE5Ij48L3N0b3A+CiAgICAgICAgICA8c3RvcCBvZmZzZXQ9IjEwMCUiIHN0b3AtY29sb3I9IiNmZmZmZmYiPjwvc3RvcD4KICAgICAgICA8L2xpbmVhckdyYWRpZW50PgogICAgICA8L2RlZnM+CiAgICA8L3N2Zz4KICAgIDx0cmVuZC1jaGFydCB2LWlmPSJkYXRhc2V0Lmxlbmd0aCIgOmRhdGFzZXRzPSJbe2RhdGE6IGRhdGFzZXQsIGZpbGw6IHRydWUsIGNsYXNzTmFtZTogJ2N1cnZlLWJ0Yyd9XSIgOmdyaWQ9ImdyaWQiICAvPgogIDwvZGl2Pgo="},{"version":3,"sources":["/Users/ernistisabekov/Desktop/SOLGRAM/src/components/quote/MiniGraph.vue"],"names":[],"mappings":";CACC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrF,CAAC,CAAC,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACltH,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/ernistisabekov/Desktop/SOLGRAM/src/components/quote/MiniGraph.vue","sourceRoot":"","sourcesContent":["<template>\n <div class=\"bitcoin-price\">\n    <svg style=\"width:0; height:0; position:absolute;\" aria-hidden=\"true\" focusable=\"false\">\n      <defs>\n        <linearGradient id=\"btcFill\" x1=\"1\" x2=\"1\" y1=\"0\" y2=\"1\">\n          <stop offset=\"0%\" stop-color=\"#f69119\"></stop>\n          <stop offset=\"100%\" stop-color=\"#ffffff\"></stop>\n        </linearGradient>\n      </defs>\n    </svg>\n    <trend-chart v-if=\"dataset.length\" :datasets=\"[{data: dataset, fill: true, className: 'curve-btc'}]\" :grid=\"grid\"  />\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport DataService from '@/service/DataService.ts'\nimport { MarketChart  } from \"@/models/marketchart.interface.ts\"\nimport {  onMounted, ref } from \"vue\"\nimport moment from 'moment'\n\n  const dataset = ref([])\n  const labels = ref(\n    {\n      xLabels: [],\n      yLabels: 0\n    }\n  )\n    \n\n  const grid = {\n      verticalLines: false,\n      verticalLinesNumber: 0,\n      horizontalLines: false,\n      horizontalLinesNumber: 0\n    }\n\n// result.split(\"/\").reverse().join(\"-\")\n  onMounted(() => {\n    DataService.chart()\n    .then(res => {\n        const data = res.data.bpi;\n        debugger\n        for (let key in data) {\n          dataset.value.push(data[key]);\n          const d = moment(key).format(\"MM/DD\")\n          labels.value.xLabels.push(d);\n        }\n      })\n      // .then((res: MarketChart) => {\n      //   const data = res.data.prices.slice(0,3)\n        \n        // for (let key in data) {\n        //   const dateTimeStr = new Date(data[key][0]).toLocaleString()\n        //   const date = dateTimeStr.split(\",\")[0].split(\"/\").reverse().join(\"-\")\n        //   data[key][0] = date\n        //   dataset.value.push(data[key]);\n        // }\n      // })\n      .catch((e: Error) => {\n        console.log(e)\n      })\n  })\n\n</script>\n\n<style>\n.bitcoin-price {\n  .vtc {\n    height: 50px;\n    font-size: 12px;\n  }\n  .grid,\n  .labels {\n    line {\n      stroke: rgba(#f69119, 0.5);\n    }\n  }\n  .x-labels {\n    .label {\n      text {\n        display: none;\n      }\n      line {\n        opacity: 0.3;\n      }\n      &:nth-child(6n + 1),\n      &:first-child {\n        text {\n          display: block;\n        }\n        line {\n          opacity: 1;\n        }\n      }\n    }\n  }\n  .curve-btc {\n    .stroke {\n      stroke: #f69119;\n      stroke-width: 2;\n    }\n    .fill {\n      fill: url(#btcFill);\n      fill-opacity: 0.5;\n    }\n  }\n}\n</style>"]}]}